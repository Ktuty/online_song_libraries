definitions:
  models.ErrorResponse:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  models.Params:
    properties:
      group:
        type: string
      song:
        type: string
    type: object
  models.Songs:
    properties:
      group:
        type: string
      id:
        type: integer
      link:
        type: string
      releaseDate:
        type: string
      song:
        type: string
      text:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server Online Songs-lib server.
  title: Online Songs-lib
  version: "1.0"
paths:
  /songs:
    get:
      consumes:
      - application/json
      description: Get a list of songs with optional filtering and pagination
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: pageSize
        type: integer
      - description: Song name
        in: query
        name: song
        type: string
      - description: Group name
        in: query
        name: group
        type: string
      - description: Song text
        in: query
        name: text
        type: string
      - description: Release date
        in: query
        name: releaseDate
        type: string
      - description: Link
        in: query
        name: link
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Songs'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all songs
      tags:
      - songs
    post:
      consumes:
      - application/json
      description: Create a new song by sending a request to an external API and then
        saving the song details.
      parameters:
      - description: Song details
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Params'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new song
      tags:
      - songs
  /songs/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a song by its ID
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a song
      tags:
      - songs
    get:
      consumes:
      - application/json
      description: Get a song by its ID
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      - default: 0
        description: Verse number
        in: query
        name: vers
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Songs'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get a song by ID
      tags:
      - songs
    patch:
      consumes:
      - application/json
      description: Update a song by its ID
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      - description: Song details
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Songs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update a song
      tags:
      - songs
swagger: "2.0"
